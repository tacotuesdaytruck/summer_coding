###### Binary Search

def binary_search(arr, target):
    low = 0
    high = len(arr) - 1

    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid              # This tells the computer to stop binary_search, and return the value of "mid" as the "result" of binary_search!!
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

    return -1  # Target not found

# Example usage
numbers = [2, 5, 7, 12, 18, 21, 29, 34, 42, 50]
target_number = 18
result = binary_search(numbers, target_number)

if result != -1:
    print("Element found at index", result)
else:
    print("Element not found")
    
    
    
### BUBBLE SORT    
    
def bubble_sort(arr):
    n = len(arr)

    for i in range(n - 1):
        for j in range(n - 1 - i):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

            # Print the current state of the list after each swap
            print(arr)

# Example usage
numbers = [5, 2, 9, 1, 3]
bubble_sort(numbers)



#### INSERTION SORT

def insertion_sort(arr):
  n = len(arr)

  for i in range(1, n):
    key = arr[i]
    j = i - 1

    while j >= 0 and arr[j] > key:
      arr[j+1] = arr[j]
      j -= 1

    arr[j+1] = key

numbers = [5, 2, 9, 1, 3]
insertion_sort(numbers)
print(numbers)








